#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2013 S. Daniel Francis <francis@sugarlabs.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

import os
import sys

import termios
import fcntl

from dictation import i18n
i18n
from gettext import gettext as _

from dictation import config
import argparse

description = _('An eSpeak based dictation utility.')
epilog = _('''Type "man dictate" to see the Dictate manual.
Submit bugs to https://github.com/sdanielf/dictate/issues''')

parser = argparse.ArgumentParser(description=description, epilog=epilog)
parser.add_argument('text',
                    help=_('Text or path for a text file to be dictated'))
for i in config.settings:
    arg = config.settings[i]
    parser.add_argument(arg[0], arg[1], metavar=arg[2],
                        choices=arg[3], help=arg[4])
args = parser.parse_args()

for i in config.settings:
    value = getattr(args, i)
    if value is not None:
        config.options[i] = value

if os.path.exists(args.text):
    _file = open(args.text, 'r')
    text = _file.read()
    _file.close()
else:
    text = args.text

from dictation.keys import keys
from dictation import wordplayer


def quit(word):
    exit()


class Console:
    def check_keys(self):
        returnvalue = None
        try:
            fd = sys.stdin.fileno()
            oldterm = termios.tcgetattr(fd)
            newattr = termios.tcgetattr(fd)
            newattr[3] = newattr[3] & ~termios.ICANON & ~termios.ECHO
            termios.tcsetattr(fd, termios.TCSANOW, newattr)

            oldflags = fcntl.fcntl(fd, fcntl.F_GETFL)
            fcntl.fcntl(fd, fcntl.F_SETFL, oldflags | os.O_NONBLOCK)

            try:
                c = sys.stdin.read(1).lower()
                #print 'Got character', repr(c)
                if c in keys:
                    print
                    #print c
                    returnvalue = keys[c][1]
                    self.print_message(keys[c][0])
            except:
                pass
            finally:
                termios.tcsetattr(fd, termios.TCSAFLUSH, oldterm)
                fcntl.fcntl(fd, fcntl.F_SETFL, oldflags)
        except:
            pass
        return returnvalue

    def print_word(self, word):
        print word

    def print_message(self, message):
        print message


welcomemsg = _('Welcome to Dictate')
print welcomemsg
print '-' * len(welcomemsg)
print _('Keys:')
spacebar = _('spacebar')
uspacebar = spacebar.decode('utf-8')
for i in keys:
    key = i.replace(' ', spacebar)
    ukey = key.decode('utf-8')
    print '%s%s%s' % (key, ' ' * (len(uspacebar) + 2 - len(ukey)), keys[i][0])
print

console = Console()
player = wordplayer.WordPlayer(text, console)
